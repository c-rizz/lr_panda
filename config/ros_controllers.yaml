
# Not an actual controller, it just publishes the joint state of the robot
joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 100







#------------------------------------------------------------------------------------
# Controllers that maintain joint efforts by controlling the effort
#------------------------------------------------------------------------------------


# JointGroupPositionController for the arm, allows to set the position of the joints
$(arg robot_name)_arm_effort_effort_controller:
    type: effort_controllers/JointGroupEffortController
    joints:
        - $(arg robot_name)_joint1
        - $(arg robot_name)_joint2
        - $(arg robot_name)_joint3
        - $(arg robot_name)_joint4
        - $(arg robot_name)_joint5
        - $(arg robot_name)_joint6
        - $(arg robot_name)_joint7

# JointGroupPositionController for the gripper, allows to set the position of the joints
$(arg robot_name)_hand_effort_effort_controller:
    type: effort_controllers/JointGroupEffortController
    joints:
        - $(arg robot_name)_finger_joint1
        - $(arg robot_name)_finger_joint2







#------------------------------------------------------------------------------------
# Controllers that a maintain joint positions by controlling the effort
#------------------------------------------------------------------------------------


# JointGroupPositionController for the arm, allows to set the position of the joints
$(arg robot_name)_arm_effort_position_controller:
    type: effort_controllers/JointGroupPositionController
    joints:
        - $(arg robot_name)_joint1
        - $(arg robot_name)_joint2
        - $(arg robot_name)_joint3
        - $(arg robot_name)_joint4
        - $(arg robot_name)_joint5
        - $(arg robot_name)_joint6
        - $(arg robot_name)_joint7
    $(arg robot_name)_joint1:
      pid: { p: 12000,   d: 50,    i: 0.0,    i_clamp: 10000 }
    $(arg robot_name)_joint2:
      pid: { p: 30000,   d: 100,   i: 0.02,   i_clamp: 10000 }
    $(arg robot_name)_joint3:
      pid: { p: 18000,   d: 50,    i: 0.01,   i_clamp: 1 }
    $(arg robot_name)_joint4:
      pid: { p: 18000,   d: 70,    i: 0.01,   i_clamp: 10000 }
    $(arg robot_name)_joint5:
      pid: { p: 12000,   d: 70,    i: 0.01,   i_clamp: 1 }
    $(arg robot_name)_joint6:
      pid: { p: 7000,    d: 50,    i: 0.01,   i_clamp: 1 }
    $(arg robot_name)_joint7:
      pid: { p: 2000,    d: 20,    i: 0.0,    i_clamp: 1 }

# JointGroupPositionController for the gripper, allows to set the position of the joints
$(arg robot_name)_hand_effort_position_controller:
    type: effort_controllers/JointGroupPositionController
    joints:
        - $(arg robot_name)_finger_joint1
        - $(arg robot_name)_finger_joint2
    $(arg robot_name)_finger_joint1:
      pid: { p: 2000,   d: 20,    i: 0.0,    i_clamp: 1 }
    $(arg robot_name)_finger_joint2:
      pid: { p: 2000,   d: 20,    i: 0.0,    i_clamp: 1 }







#------------------------------------------------------------------------------------
# Controllers that a follow a joint position trajectory by controlling the effort
#------------------------------------------------------------------------------------


# JointTrajectoryController for the arm, allows to follow a joint-space trajectory
$(arg robot_name)_arm_effort_trajectory_controller:
    type: effort_controllers/JointTrajectoryController
    joints:
        - $(arg robot_name)_joint1
        - $(arg robot_name)_joint2
        - $(arg robot_name)_joint3
        - $(arg robot_name)_joint4
        - $(arg robot_name)_joint5
        - $(arg robot_name)_joint6
        - $(arg robot_name)_joint7

    gains:
        $(arg robot_name)_joint1: { p: 12000,   d: 50,    i: 0.0,    i_clamp: 10000 }
        $(arg robot_name)_joint2: { p: 30000,   d: 100,   i: 0.02,   i_clamp: 10000 }
        $(arg robot_name)_joint3: { p: 18000,   d: 50,    i: 0.01,   i_clamp: 1 }
        $(arg robot_name)_joint4: { p: 18000,   d: 70,    i: 0.01,   i_clamp: 10000 }
        $(arg robot_name)_joint5: { p: 12000,   d: 70,    i: 0.01,   i_clamp: 1 }
        $(arg robot_name)_joint6: { p: 7000,    d: 50,    i: 0.01,   i_clamp: 1 }
        $(arg robot_name)_joint7: { p: 2000,    d: 20,    i: 0.0,    i_clamp: 1 }

    constraints:
        goal_time: 2.0
      #  stopped_velocity_tolerance: 0.02 # Override default
      #  $(arg robot_name)_joint1:
      #    trajectory: 0.05               # Not enforced if unspecified
      #    goal: 0.02                     # Not enforced if unspecified
      #  $(arg robot_name)_joint1:
      #    goal: 0.01                     # Not enforced if unspecified

    state_publish_rate: 100
    #action_monitor_rate: 30            # Override default
    #stop_trajectory_duration: 0        # Override default



# JointTrajectoryController for the hand, allows to follow a joint-space trajectory
$(arg robot_name)_hand_effort_trajectory_controller:
    type: effort_controllers/JointTrajectoryController
    joints:
        - $(arg robot_name)_finger_joint1
        - $(arg robot_name)_finger_joint2

    gains:
        $(arg robot_name)_finger_joint1: { p: 5, d: 3.0, i: 0, i_clamp: 1 }
        $(arg robot_name)_finger_joint2: { p: 5, d: 1.0, i: 0, i_clamp: 1 }

    state_publish_rate: 25







#------------------------------------------------------------------------------------
# Controllers that a follow a joint position trajectory by controlling the positions
#------------------------------------------------------------------------------------


# JointTrajectoryController for the arm, allows to follow a joint-space trajectory
$(arg robot_name)_arm_position_trajectory_controller:
    type: position_controllers/JointTrajectoryController
    joints:
        - $(arg robot_name)_joint1
        - $(arg robot_name)_joint2
        - $(arg robot_name)_joint3
        - $(arg robot_name)_joint4
        - $(arg robot_name)_joint5
        - $(arg robot_name)_joint6
        - $(arg robot_name)_joint7


    constraints:
        goal_time: 1.0
        $(arg robot_name)_joint1:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified
        $(arg robot_name)_joint2:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified
        $(arg robot_name)_joint3:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified
        $(arg robot_name)_joint4:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified
        $(arg robot_name)_joint5:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified
        $(arg robot_name)_joint6:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified
        $(arg robot_name)_joint7:
          trajectory: 0.05               # Not enforced if unspecified
          goal: 0.01                     # Not enforced if unspecified

    state_publish_rate: 100


# JointTrajectoryController for the hand, allows to follow a joint-space trajectory
$(arg robot_name)_hand_position_trajectory_controller:
    type: position_controllers/JointTrajectoryController
    joints:
        - $(arg robot_name)_finger_joint1
        - $(arg robot_name)_finger_joint2

    state_publish_rate: 25
